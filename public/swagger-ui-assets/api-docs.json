{
    "openapi": "3.0.0",
    "info": {
        "title": "Sous Mon Toit",
        "description": "Documentation for the API SousMonToit",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Server of the real estate agency Sous Mon Toit"
        },
        {
            "url": "https://sousmontoit.herokuapp.com/",
            "description": "Server heroku of the real estate agency Sous Mon Toit"
        }
    ],
    "paths": {
        "/schedule/": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get list of all appointment",
                "description": "Return list of all appointments",
                "operationId": "getAppointmentList",
                "responses": {
                    "200": {
                        "description": "A list with appointment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Appointments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get appointment information",
                "description": "Return one appointment",
                "operationId": "getAppointment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointments"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/customer/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments information for customer selected",
                "description": "Return all appointments for customer selected",
                "operationId": "getAppointmentCustomer",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Appointments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/staff/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments information for staff selected",
                "description": "Return all appointments for staff selected",
                "operationId": "getAppointmentStaff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Appointments"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/createAppt": {
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Store new appointment",
                "description": "Returns successful message",
                "operationId": "storeAppointment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointments"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/update/{id}": {
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update existing appointment",
                "description": "Returns updated appointment data",
                "operationId": "updateAppointments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Appointments"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Appointments"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/delete/{id}": {
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete existing appointment",
                "description": "Return succesfull message",
                "operationId": "deleteAppointment",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/schedule/appointmentsTypes": {
            "get": {
                "tags": [
                    "AppointmentsTypes"
                ],
                "summary": "Return the list of all appointmentTypes",
                "description": "Retourne la liste des types de contrats",
                "operationId": "getAppointmentTypesList",
                "responses": {
                    "200": {
                        "description": "A list with appointments types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AppointmentsTypes"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login/customer": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Get token for Customer",
                "description": "Return the token of the customer",
                "operationId": "getTokenCustomer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "mail",
                                    "password"
                                ],
                                "properties": {
                                    "mail": {
                                        "description": "mail of the customer member",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password of the customer member",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A token for customer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/login/staff": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Get token for staff",
                "description": "Return the token of the staff",
                "operationId": "getTokenStaff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "description": "login of the staff member",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Password of the staff member",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A token for staff",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/contract/": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Get list of all contracts",
                "description": "Return list of all contracts",
                "operationId": "getContractsList",
                "responses": {
                    "200": {
                        "description": "A list with contracts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Contracts"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contract/{id}": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Get contract information",
                "description": "Return one contract",
                "operationId": "getContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contract/saveContract": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Store new contract",
                "description": "Returns successful message",
                "operationId": "storeContract",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contracts"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contract/update/{id}": {
            "put": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Update existing contract",
                "description": "Returns updated contract data",
                "operationId": "updateContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Contracts"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Contracts"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contract/archive/{id}": {
            "delete": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Delete existing contract",
                "description": "Return succesfull message",
                "operationId": "archiveContract",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/contract/contractsTypes": {
            "get": {
                "tags": [
                    "ContractsTypes"
                ],
                "summary": "Return the list of all contractsTypes",
                "description": "Retourne la liste des types de contrats",
                "operationId": "getContractsTypesList",
                "responses": {
                    "200": {
                        "description": "A list with contracts types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ContractsTypes"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/customer/s/": {
            "get": {
                "tags": [
                    "CustomersForStaff"
                ],
                "summary": "Get list of all customers",
                "description": "Return list of all customers",
                "operationId": "getCustomersList",
                "responses": {
                    "200": {
                        "description": "A list with customers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customers"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/customer_type/": {
            "get": {
                "tags": [
                    "CustomersTypes"
                ],
                "summary": "Return the list of all Customers Types",
                "description": "Retourne la liste des types de customers",
                "operationId": "getCustomersTypesList",
                "responses": {
                    "200": {
                        "description": "A list with customers types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CustomersTypes"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/estates": {
            "get": {
                "tags": [
                    "Estates"
                ],
                "summary": "Return the list of all estates",
                "operationId": "getEstatesList",
                "responses": {
                    "200": {
                        "description": "A list with estates",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Estates"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "default": {
                        "description": "une erreur \"inattendue\""
                    }
                }
            }
        },
        "/estates_types/": {
            "get": {
                "tags": [
                    "EstatesTypes"
                ],
                "summary": "Return the list of all estates Types",
                "description": "Retourne la liste des types des types de biens",
                "operationId": "getEstatesTypesList",
                "responses": {
                    "200": {
                        "description": "A list with estates types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EstatesTypes"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/functions/": {
            "get": {
                "tags": [
                    "Functions"
                ],
                "summary": "Return the list of all functions",
                "description": "Retourne la liste des fonctions",
                "operationId": "getFunctionsList",
                "responses": {
                    "200": {
                        "description": "A list with functions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Functions"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/roles/": {
            "get": {
                "tags": [
                    "Rôles"
                ],
                "summary": "Return the list of all rôles",
                "description": "Retourne la liste des rôles",
                "operationId": "getRolesList",
                "responses": {
                    "200": {
                        "description": "A list with rôles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Roles"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/staff/": {
            "get": {
                "tags": [
                    "Staffs"
                ],
                "summary": "Get list of all staff",
                "description": "Return list of all staff",
                "operationId": "getStaffList",
                "responses": {
                    "200": {
                        "description": "A list with staffs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Staffs"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/staff/{id}": {
            "get": {
                "tags": [
                    "Staffs"
                ],
                "summary": "Get staff information",
                "description": "Return one staff",
                "operationId": "getStaff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staffs"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/staff/delete/{id}": {
            "delete": {
                "tags": [
                    "Staffs"
                ],
                "summary": "Archive existing staff",
                "description": "Return succesfull message",
                "operationId": "archiveStaff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/staff/create": {
            "post": {
                "tags": [
                    "Staffs"
                ],
                "summary": "Store new staff",
                "description": "Returns successful message",
                "operationId": "storeStaff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Staffs"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staffs"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/staff/update/{id}": {
            "put": {
                "tags": [
                    "Staffs"
                ],
                "summary": "Update existing staff",
                "description": "Returns updated staff data",
                "operationId": "updateStaff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Staffs"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Staffs"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Appointments": {
                "title": "Appointments",
                "description": "Appointments model",
                "required": [
                    "id",
                    "scheduled_at",
                    "created_at",
                    "id_staff"
                ],
                "properties": {
                    "id": {
                        "description": "ID of appointment",
                        "format": "int64"
                    },
                    "scheduled_at": {
                        "description": "Date of appointment"
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "notes": {
                        "description": "all you need to know for the appointment"
                    },
                    "id_estate": {
                        "description": "Id of the estate"
                    },
                    "id_staff": {
                        "description": "Id of the staff"
                    },
                    "id_customer": {
                        "description": "Id of the customer"
                    },
                    "id_appointment_type": {
                        "description": "Id of the appointment type"
                    }
                },
                "type": "object"
            },
            "AppointmentsTypes": {
                "title": "AppointmentsTypes",
                "description": "AppointmentsTypes model",
                "properties": {
                    "id": {
                        "description": "ID of appointment type",
                        "format": "int64"
                    },
                    "appointment_type": {
                        "description": "Appointment type"
                    }
                },
                "type": "object"
            },
            "Contracts": {
                "title": "Contracts",
                "description": "Contracts model",
                "properties": {
                    "id": {
                        "description": "ID of the user"
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "deleted_at": {
                        "description": "Date of archived"
                    },
                    "folder": {
                        "description": "Folder where the contract is stocked"
                    },
                    "name": {
                        "description": "Name of the contract"
                    },
                    "id_staff": {
                        "description": "Id of the staff"
                    },
                    "id_estate": {
                        "description": "Id of the estate"
                    },
                    "id_customer": {
                        "description": "Id of the customer"
                    },
                    "id_contract_type": {
                        "description": "Id of the contract type"
                    }
                },
                "type": "object"
            },
            "ContractsTypes": {
                "title": "ContractsTypes",
                "description": "ContractsTypes model",
                "properties": {
                    "id": {
                        "description": "ID of the contract type"
                    },
                    "contract_type": {
                        "description": "Name of the contract type"
                    },
                    "template_path": {
                        "description": "Path of the contract type template"
                    }
                },
                "type": "object"
            },
            "Customers": {
                "title": "Customers",
                "description": "Customers model",
                "properties": {
                    "id": {
                        "description": "ID of the customer"
                    },
                    "n_customer": {
                        "description": "Number of the customer"
                    },
                    "firstname": {
                        "description": ""
                    },
                    "lastname": {
                        "description": ""
                    },
                    "gender": {
                        "description": "Male or Female or Agender",
                        "enum": [
                            "M",
                            "F",
                            "A"
                        ]
                    },
                    "mail": {
                        "description": ""
                    },
                    "phone": {
                        "description": ""
                    },
                    "password": {
                        "description": ""
                    },
                    "birthdate": {
                        "description": ""
                    },
                    "address": {
                        "description": ""
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "deleted_at": {
                        "description": "Date of archived"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "first_met": {
                        "description": "if there has already been a meeting with the client"
                    },
                    "token": {
                        "description": "?"
                    },
                    "password_request": {
                        "description": "if there is a password change request"
                    }
                },
                "type": "object"
            },
            "CustomersSearchs": {
                "title": "CustomersSearchs",
                "description": "CustomersSearchs model",
                "properties": {
                    "id": {
                        "description": "ID of the customer"
                    },
                    "buy_or_rent": {
                        "description": "it is a search to buy a property or sell a property",
                        "enum": [
                            "BUY",
                            "RENT"
                        ]
                    },
                    "surface_min": {
                        "description": ""
                    },
                    "number_rooms": {
                        "description": ""
                    },
                    "budget_min": {
                        "description": ""
                    },
                    "budget_max": {
                        "description": ""
                    },
                    "search_longitude": {
                        "description": ""
                    },
                    "search_latitude": {
                        "description": ""
                    },
                    "search_radius": {
                        "description": ""
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "alert": {
                        "description": "if there is a password change request"
                    },
                    "id_customer": {
                        "description": "ID of the customer"
                    },
                    "id_estate_type": {
                        "description": "ID of the estate type"
                    }
                },
                "type": "object"
            },
            "CustomersTypes": {
                "title": "CustomersTypes",
                "description": "CustomersTypes model",
                "properties": {
                    "id": {
                        "description": "ID of the Customers Types"
                    },
                    "customer_type": {
                        "description": "Name of the customer type",
                        "enum": [
                            "Acheteur",
                            "Vendeur",
                            "Bailleur",
                            "Loueur"
                        ]
                    }
                },
                "type": "object"
            },
            "Estates": {
                "title": "Estates",
                "description": "Estates model",
                "properties": {
                    "id": {
                        "description": "ID of the estate"
                    },
                    "id_estate_type": {
                        "description": ""
                    },
                    "id_customer": {
                        "description": "Id of the seller"
                    },
                    "title": {
                        "description": ""
                    },
                    "reference": {
                        "description": ""
                    },
                    "dpe_file": {
                        "description": ""
                    },
                    "buy_or_rent": {
                        "description": "it is a property for sale or a property for rent",
                        "enum": [
                            "BUY",
                            "RENT"
                        ]
                    },
                    "address": {
                        "description": ""
                    },
                    "city": {
                        "description": ""
                    },
                    "zipcode": {
                        "description": ""
                    },
                    "estate_longitude": {
                        "description": ""
                    },
                    "estate_latitude": {
                        "description": ""
                    },
                    "price": {
                        "description": ""
                    },
                    "description": {
                        "description": ""
                    },
                    "disponibility": {
                        "description": ""
                    },
                    "year_of_construction": {
                        "description": ""
                    },
                    "living_surface": {
                        "description": ""
                    },
                    "carrez_law": {
                        "description": ""
                    },
                    "land_surface": {
                        "description": ""
                    },
                    "nb_rooms": {
                        "description": ""
                    },
                    "nb_bedrooms": {
                        "description": ""
                    },
                    "nb_bathrooms": {
                        "description": ""
                    },
                    "nb_sanitary": {
                        "description": ""
                    },
                    "nb_toilet": {
                        "description": ""
                    },
                    "nb_kitchen": {
                        "description": ""
                    },
                    "nb_garage": {
                        "description": ""
                    },
                    "nb_parking": {
                        "description": ""
                    },
                    "nb_balcony": {
                        "description": ""
                    },
                    "type_kitchen": {
                        "description": ""
                    },
                    "heaters": {
                        "description": ""
                    },
                    "communal_heating": {
                        "description": ""
                    },
                    "furnished": {
                        "description": ""
                    },
                    "private_parking": {
                        "description": ""
                    },
                    "handicap_access": {
                        "description": ""
                    },
                    "cellar": {
                        "description": ""
                    },
                    "terrace": {
                        "description": ""
                    },
                    "swimming_pool": {
                        "description": ""
                    },
                    "fireplace": {
                        "description": ""
                    },
                    "all_in_sewer": {
                        "description": ""
                    },
                    "septik_tank": {
                        "description": ""
                    },
                    "property_charge": {
                        "description": ""
                    },
                    "attic": {
                        "description": ""
                    },
                    "elevator": {
                        "description": ""
                    },
                    "rental_charge": {
                        "description": ""
                    },
                    "coownership_charge": {
                        "description": ""
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "deleted_at": {
                        "description": "Date of archived"
                    }
                },
                "type": "object"
            },
            "EstatesTypes": {
                "title": "EstatesTypes",
                "description": "EstatesTypes model",
                "properties": {
                    "id": {
                        "description": "ID of the estate type"
                    },
                    "estate_type_name": {
                        "description": "Name of the estate type"
                    }
                },
                "type": "object"
            },
            "Functions": {
                "title": "Functions",
                "description": "Functions model",
                "properties": {
                    "id": {
                        "description": "ID of the function"
                    },
                    "function_name": {
                        "description": "Name of the estate type"
                    }
                },
                "type": "object"
            },
            "Pictures": {
                "title": "Pictures",
                "description": "Pictures model",
                "properties": {
                    "id": {
                        "description": ""
                    },
                    "folder": {
                        "description": ""
                    },
                    "name": {
                        "description": ""
                    },
                    "alt": {
                        "description": ""
                    },
                    "cover": {
                        "description": ""
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "id_estate": {
                        "description": ""
                    }
                },
                "type": "object"
            },
            "Roles": {
                "title": "Roles",
                "description": "Roles model",
                "properties": {
                    "id": {
                        "description": "ID of the role"
                    },
                    "role": {
                        "description": ""
                    }
                },
                "type": "object"
            },
            "Staffs": {
                "title": "Staffs",
                "description": "Staffs model",
                "properties": {
                    "id": {
                        "description": "ID of the staff"
                    },
                    "login": {
                        "description": ""
                    },
                    "firstname": {
                        "description": ""
                    },
                    "lastname": {
                        "description": ""
                    },
                    "created_at": {
                        "description": "Date of created"
                    },
                    "updated_at": {
                        "description": "Date of updated"
                    },
                    "deleted_at": {
                        "description": "Date of archived"
                    },
                    "mail": {
                        "description": ""
                    },
                    "phone": {
                        "description": ""
                    },
                    "password": {
                        "description": ""
                    },
                    "id_function": {
                        "description": ""
                    },
                    "id_role": {
                        "description": ""
                    },
                    "avatar": {
                        "description": ""
                    },
                    "alert_reader": {
                        "description": "unread notification or not",
                        "type": "boolean",
                        "example": 0
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request"
            },
            "401": {
                "description": "Access token is missing or invalid"
            },
            "403": {
                "description": "Forbidden"
            },
            "404": {
                "description": "Resource Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Resource Not Found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "default": {
                "description": "une erreur \"inattendue\""
            }
        },
        "parameters": {
            "id": {
                "name": "id",
                "in": "path",
                "description": "Id of resource",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter the token for customer or staff",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}